[{"/Users/betty/Elisabeth/React-TodoList/src/index.js":"1","/Users/betty/Elisabeth/React-TodoList/src/App.js":"2","/Users/betty/Elisabeth/React-TodoList/src/components/InsertForm.js":"3","/Users/betty/Elisabeth/React-TodoList/src/components/TodoList.js":"4","/Users/betty/Elisabeth/React-TodoList/src/components/TodoItem.js":"5","/Users/betty/Elisabeth/React-TodoList/src/store/RootStore.js":"6","/Users/betty/Elisabeth/React-TodoList/src/store/TodoStore.js":"7"},{"size":328,"mtime":1612447234316,"results":"8","hashOfConfig":"9"},{"size":671,"mtime":1612447324069,"results":"10","hashOfConfig":"9"},{"size":815,"mtime":1612447324068,"results":"11","hashOfConfig":"9"},{"size":3107,"mtime":1612447324070,"results":"12","hashOfConfig":"9"},{"size":147,"mtime":1612447234315,"results":"13","hashOfConfig":"9"},{"size":149,"mtime":1612447234316,"results":"14","hashOfConfig":"9"},{"size":1721,"mtime":1612447234316,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nsqr6v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/betty/Elisabeth/React-TodoList/src/index.js",[],"/Users/betty/Elisabeth/React-TodoList/src/App.js",[],"/Users/betty/Elisabeth/React-TodoList/src/components/InsertForm.js",[],["32","33"],"/Users/betty/Elisabeth/React-TodoList/src/components/TodoList.js",["34"],"import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n// import TodoItem from \"./TodoItem\";\nimport { toJS } from \"mobx\";\n\n@inject(\"todoStore\")\n@observer\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updateValue: \"\"\n    };\n  }\n  // isComplete input체크\n  onChangeComplete = (id) => {\n    const { todoStore } = this.props;\n    todoStore.onChangeComplete(id);\n  };\n\n  // 수정버튼\n  onUpdateForm = (id, title) => {\n    // console.log(id, \"update\");\n    const { todoStore } = this.props;\n    todoStore.onUpdateForm(id);\n    this.setState({\n      updateValue: title\n    });\n  };\n\n  // 수정input value\n  onUpdateValue = (e) => {\n    const value = e.target.value;\n    // const { todoStore } = this.props;\n    // todoStore.onUpdateValue(value);\n    this.setState({\n      updateValue: value\n    });\n  };\n\n  // 삭제버튼\n  deleteItem = (id) => {\n    const { todoStore } = this.props;\n    todoStore.deleteItem(id);\n  };\n  render() {\n    const { todoStore } = this.props;\n    const { todoList } = todoStore;\n    return (\n      <ul className=\"todo-list\">\n        {todoList.map((item) => {\n          return (\n            <li\n              className={item.isComplete ? \"list-item active\" : \"list-item\"}\n              key={item.id}\n            >\n              {item.isUpdate ? (\n                <>\n                  <div>\n                    <input\n                      type=\"text\"\n                      value={this.state.updateValue}\n                      placeholder=\"todo를 적어주세요\"\n                      onChange={this.onUpdateValue}\n                    />\n                  </div>\n                  <div className=\"button\">\n                    <button type=\"button\" className=\"btn btn-ok\">\n                      수정완료\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-cancel\"\n                      onClick={() => this.onUpdateForm(item.id)}\n                    >\n                      취소\n                    </button>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"text\">{item.title}</div>\n                  <div className=\"checked\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"chk1\"\n                      onChange={() => this.onChangeComplete(item.id)}\n                    />\n                  </div>\n\n                  <div className=\"button\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-modify\"\n                      onClick={() => this.onUpdateForm(item.id, item.title)}\n                    >\n                      수정\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-delete\"\n                      onClick={() => this.deleteItem(item.id)}\n                    >\n                      삭제\n                    </button>\n                  </div>\n                </>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","/Users/betty/Elisabeth/React-TodoList/src/components/TodoItem.js",[],"/Users/betty/Elisabeth/React-TodoList/src/store/RootStore.js",[],"/Users/betty/Elisabeth/React-TodoList/src/store/TodoStore.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":10,"nodeType":"41","messageId":"42","endLine":4,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'toJS' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]